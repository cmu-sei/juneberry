{
    "batch_size_comment": "On gpu07, using all six gpus, we have 128 * 6 = 768",
    "batch_size": 768,
    "description": "Retrain a resnet18 from pytorch",
    "epochs": 20,
    "evaluation_transforms": [
        {
            "fqcn": "torchvision.transforms.Resize",
            "kwargs": {
                "size": 256
            }
        },
        {
            "fqcn": "torchvision.transforms.CenterCrop",
            "kwargs": {
                "size": 224
            }
        },
        {
            "fqcn": "juneberry.transforms.image.ConvertMode",
            "kwargs": {
                "mode": "RGB"
            }
        },
        {
            "fqcn": "torchvision.transforms.ToTensor"
        },
        {
            "fqcn": "torchvision.transforms.Normalize",
            "kwargs": {
                "mean": [
                    0.485,
                    0.456,
                    0.406
                ],
                "std": [
                    0.229,
                    0.224,
                    0.225
                ]
            }
        }
    ],
    "format_version": "0.2.0",
    "label_mapping": "data_sets/label_mappings/imagenet.json",
    "model_architecture": {
        "args": {
            "classArgs": {
                "pretrained": false
            },
            "className": "resnet18"
        },
        "module": "juneberry.architectures.pytorch.torchvision.Wrapper"
    },
    "platform": "pytorch",
    "pytorch": {
        "accuracy_args": {
            "normalize": true
        },
        "accuracy_fn": "sklearn.metrics.accuracy_score",
        "deterministic": true,
        "loss_fn": "torch.nn.CrossEntropyLoss",
        "lr_schedule_args": {
            "epochs": 20,
            "max_lr": 1.0,
            "steps_per_epoch": 1281166
        },
        "lr_schedule_fn": "torch.optim.lr_scheduler.OneCycleLR",
        "optimizer_comments": [
            " From: https://arxiv.org/pdf/1708.07120.pdf",
            " ... The hyper-parameters choices for the original training is set to the recommended values in Szegedy et al. [2017]",
            " ... (i.e., momentum = 0.9, LR = 0.045 decaying every 2 epochs using an exponential rate of 0.94, WD = 10\u22124). This ",
            " ... produced the familiar training curve indicated by the blue lines in Figure 63...",
            " and then the values for the weight decay :",
            " ... On the other hand, reducing the weight decay permitted use of the 1cycle learning rate policy with the learning rate",
            " ... varying from 0.05 to 1.0, then down to 0.00005 in 20 epochs. The weight decay values in the range from 3 \u00d7 10\u22126",
            " ... to 10\u22126 work well and using a weight decay of 3 \u00d7 10\u22126 provides the best accuracy of 74.0%. As with resnet-50,",
            " ... there appears to be a small amount of overfitting with this weight decay value.",
            " I think the 20 epochs are already baked in to the multi-gpu setting, the paper mentions multi-gpu, but not scaling. Leave at 20 epochs"
        ],
        "optimizer_args": {
            "lr": 1.0,
            "momentum": 0.9,
            "weight_decay": 3e-06
        },
        "optimizer_fn": "torch.optim.SGD"
    },
    "seed": 4210592948,
    "task": "classification",
    "timestamp": "2021-06-23T10:20:00",
    "training_dataset_config_path": "data_sets/imagenet_train.json",
    "training_transforms": [
        {
            "fqcn": "torchvision.transforms.RandomResizedCrop",
            "kwargs": {
                "size": 224
            }
        },
        {
            "fqcn": "juneberry.transforms.image.ConvertMode",
            "kwargs": {
                "mode": "RGB"
            }
        },
        {
            "fqcn": "torchvision.transforms.ToTensor"
        },
        {
            "fqcn": "torchvision.transforms.Normalize",
            "kwargs": {
                "mean": [
                    0.485,
                    0.456,
                    0.406
                ],
                "std": [
                    0.229,
                    0.224,
                    0.225
                ]
            }
        }
    ],
    "validation": {
        "algorithm": "from_file",
        "arguments": {
            "file_path": "data_sets/imagenet_validation.json"
        }
    }
}
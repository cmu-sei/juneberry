#! /usr/bin/env python3

# ======================================================================================================================
# Juneberry - General Release
#
# Copyright 2021 Carnegie Mellon University.
#
# NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS"
# BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER
# INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED
# FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM
# FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
#
# Released under a BSD (SEI)-style license, please see license.txt or contact permission@sei.cmu.edu for full terms.
#
# [DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.  Please see
# Copyright notice for non-US Government use and distribution.
#
# This Software includes and/or makes use of Third-Party Software subject to its own license.
#
# DM21-0884
#
# ======================================================================================================================

import argparse
import logging

import juneberry.scripting as jb_scripting
import juneberry.tuning.tuner as jb_tuner

logger = logging.getLogger("juneberry.jb_tune")


def setup_args(parser) -> None:
    """
    Adds arguments to the parser
    :param parser: The parser in which to add arguments.
    """
    # TODO
    parser.add_argument('modelName', help='Name of the directory in the workspace "models" directory containing the '
                                          'model \'config.json\' of the model to be tuned.')
    parser.add_argument('tuningConfig', help='Name of the tuning config to apply to the model.')


def main():
    # Setup and parse all arguments.
    # TODO: description
    parser = argparse.ArgumentParser(description="Performs the hyperparameter tuning defined in a tuning config "
                                                 "on a Juneberry model.")

    setup_args(parser)
    jb_scripting.setup_args(parser)
    args = parser.parse_args()

    lab = jb_scripting.setup_for_single_model(args, log_file=None, log_prefix="",
                                              model_name=args.modelName, banner_msg=">>> Juneberry Tuner <<<")

    # TODO: Pass in the model arg, the tuning arg, and then tune the model using the tuning config.
    tuner = jb_tuner.Tuner(args.modelName, args.tuningConfig, lab)
    tuner.tune()
    tuner.process_best_result()

    logger.info(f"jb_tune is done.")


if __name__ == "__main__":
    jb_scripting.run_main(main, logger)
